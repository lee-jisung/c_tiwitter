{"version":3,"sources":["fbase.js","routes/Profile.js","Components/AuthForm.js","routes/Auth.js","Components/Tweet.js","Components/TweetFactory.js","routes/Home.js","Components/Navigation.js","Components/Router.js","Components/App.js","index.js"],"names":["firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseInstance","authService","dbService","storageService","Profile","refreshUser","userObj","history","useHistory","useState","displayName","newDisplayName","setNewDisplayName","getMyTweets","a","collection","where","uid","orderBy","get","tweets","console","log","docs","map","doc","data","useEffect","onSubmit","e","preventDefault","updateProfile","className","onChange","target","value","type","autoFocus","placeholder","style","marginTop","onClick","signOut","push","AuthForm","email","setEmail","password","setPassword","newAccount","setNewAccount","err","setErr","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","required","prev","Auth","onSocialClick","name","provider","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","marginBottom","faGoogle","faGithub","Tweet","tweetObj","isOwner","editing","setEditing","text","newTweet","setNewTweet","onDeleteClick","window","confirm","id","delete","refFromURL","downloadUrl","toggleEditing","update","src","alt","class","faTrash","faPencilAlt","TweetFactory","setMessage","fileUrl","setFileUrl","fileRef","ref","child","uuidv4","putString","response","getDownloadURL","tweet","createAt","Date","now","creatorId","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","currentTarget","result","readAsDataURL","opacity","backgroundImage","faTimes","Home","setTweets","onSnapshot","snapshot","tweetArr","twet","key","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","component","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0d3979f3.chunk.js","sourcesContent":["import * as firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport 'firebase/storage';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\n\r\nexport const dbService = firebase.firestore();\r\n\r\nexport const storageService = firebase.storage();\r\n","import { authService, dbService } from 'fbase';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction Profile({ refreshUser, userObj }) {\r\n  const history = useHistory();\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n\r\n  const getMyTweets = async () => {\r\n    const tweets = await dbService\r\n      .collection('tweets')\r\n      .where('creatorId', '==', userObj.uid)\r\n      .orderBy('createAt')\r\n      .get();\r\n\r\n    console.log(tweets.docs.map(doc => doc.data()));\r\n  };\r\n\r\n  useEffect(() => {\r\n    getMyTweets();\r\n  }, []);\r\n\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push('/');\r\n  };\r\n\r\n  const onSubmit = async e => {\r\n    e.preventDefault();\r\n    if (userObj.displayName !== newDisplayName) {\r\n      await userObj.updateProfile({\r\n        displayName: newDisplayName,\r\n      });\r\n      refreshUser();\r\n    }\r\n  };\r\n\r\n  const onChange = e => {\r\n    setNewDisplayName(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={onSubmit} className=\"profileForm\">\r\n        <input\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          autoFocus\r\n          placeholder=\"Display Name\"\r\n          value={newDisplayName}\r\n          className=\"formInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Update Profile\"\r\n          className=\"formBtn\"\r\n          style={{\r\n            marginTop: 10,\r\n          }}\r\n        />\r\n      </form>\r\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        Log Out\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","import { authService } from 'fbase';\r\nimport React, { useState } from 'react';\r\n\r\nfunction AuthForm() {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [err, setErr] = useState('');\r\n\r\n  const onSubmit = async e => {\r\n    e.preventDefault();\r\n    try {\r\n      let data;\r\n      if (newAccount) {\r\n        // create account\r\n        data = await authService.createUserWithEmailAndPassword(\r\n          email,\r\n          password\r\n        );\r\n      } else {\r\n        //log in\r\n        data = await authService.signInWithEmailAndPassword(email, password);\r\n      }\r\n      console.log(data);\r\n    } catch (error) {\r\n      setErr(error.message);\r\n    }\r\n  };\r\n  const toggleAccount = () => setNewAccount(prev => !prev);\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={e => {\r\n            setEmail(e.target.value);\r\n          }}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          className=\"authInput\"\r\n          onChange={e => {\r\n            setPassword(e.target.value);\r\n          }}\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          className=\"authInput authSubmit\"\r\n          value={newAccount ? 'Create Account ' : 'Sign In'}\r\n        />\r\n        {err && <span className=\"authError\">{err}</span>}\r\n      </form>\r\n      <span onClick={toggleAccount} className=\"authSwitch\">\r\n        {newAccount ? 'Sign In' : 'Create Account'}\r\n      </span>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AuthForm;\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from '@fortawesome/free-brands-svg-icons';\r\nimport { authService, firebaseInstance } from 'fbase';\r\nimport AuthForm from 'Components/AuthForm';\r\n\r\nconst Auth = () => {\r\n  const onSocialClick = async e => {\r\n    const {\r\n      target: { name },\r\n    } = e;\r\n    let provider;\r\n    if (name === 'google') {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if (name === 'github') {\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n    await authService.signInWithPopup(provider);\r\n  };\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={'#04AAFF'}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <AuthForm />\r\n      <div className=\"authBtns\">\r\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n        </button>\r\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Auth;\r\n","import React, { useState } from 'react';\r\nimport { dbService, storageService } from 'fbase';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrash, faPencilAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\nfunction Tweet({ tweetObj, isOwner }) {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newTweet, setNewTweet] = useState(tweetObj.text);\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm('Are you sure you want to delete this?');\r\n    if (ok) {\r\n      await dbService.doc(`tweets/${tweetObj.id}`).delete();\r\n      await storageService.refFromURL(tweetObj.downloadUrl).delete();\r\n    }\r\n  };\r\n\r\n  const toggleEditing = () => setEditing(prev => !prev);\r\n  const onSubmit = async e => {\r\n    e.preventDefault();\r\n    await dbService.doc(`tweets/${tweetObj.id}`).update({\r\n      text: newTweet,\r\n    });\r\n    setEditing(false);\r\n  };\r\n  const onChange = e => {\r\n    const {\r\n      target: { value },\r\n    } = e;\r\n    setNewTweet(value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"nweet\">\r\n      {editing ? (\r\n        <>\r\n          <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n            <input\r\n              onChange={onChange}\r\n              type=\"text\"\r\n              placeholder=\"edit your tweet\"\r\n              value={newTweet}\r\n              required\r\n              autoFocus\r\n              className=\"formInput\"\r\n            />\r\n            <input type=\"submit\" value=\"Update Tweet\" className=\"formBtn\" />\r\n          </form>\r\n          <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n            Cancel\r\n          </span>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4>{tweetObj.text}</h4>\r\n          {tweetObj.downloadUrl && (\r\n            <img src={tweetObj.downloadUrl} alt=\"file\" />\r\n          )}\r\n          {isOwner && (\r\n            <div class=\"nweet__actions\">\r\n              <span onClick={onDeleteClick}>\r\n                <FontAwesomeIcon icon={faTrash} />\r\n              </span>\r\n              <span onClick={toggleEditing}>\r\n                <FontAwesomeIcon icon={faPencilAlt} />\r\n              </span>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Tweet;\r\n","import { dbService, storageService } from 'fbase';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus, faTimes } from '@fortawesome/free-solid-svg-icons';\r\n\r\nfunction TweetFactory({ userObj }) {\r\n  const [message, setMessage] = useState('');\r\n  const [fileUrl, setFileUrl] = useState('');\r\n  const onSubmit = async e => {\r\n    if (message === '') {\r\n      return;\r\n    }\r\n    e.preventDefault();\r\n    let downloadUrl = '';\r\n    if (fileUrl !== '') {\r\n      //create reference of file, upload image to firebase storage\r\n      const fileRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n      const response = await fileRef.putString(fileUrl, 'data_url');\r\n      downloadUrl = await response.ref.getDownloadURL();\r\n    }\r\n    const tweet = {\r\n      text: message,\r\n      createAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      downloadUrl,\r\n    };\r\n    // add data to Firestorep\r\n    await dbService.collection('tweets').add(tweet);\r\n    setMessage('');\r\n    setFileUrl('');\r\n  };\r\n\r\n  const onChange = e => {\r\n    setMessage(e.target.value);\r\n  };\r\n\r\n  const onFileChange = e => {\r\n    const {\r\n      target: { files },\r\n    } = e;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = finishedEvent => {\r\n      setFileUrl(finishedEvent.currentTarget.result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n\r\n  const onClearPhoto = () => setFileUrl('');\r\n  return (\r\n    <div>\r\n      <form onSubmit={onSubmit} className=\"factoryForm\">\r\n        <div className=\"factoryInput__container\">\r\n          <input\r\n            className=\"factoryInput__input\"\r\n            value={message}\r\n            onChange={onChange}\r\n            type=\"text\"\r\n            placeholder=\"What's on your mind?\"\r\n            maxLength={120}\r\n          />\r\n          <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n        </div>\r\n        <label for=\"attach-file\" className=\"factoryInput__label\">\r\n          <span>Add photos</span>\r\n          <FontAwesomeIcon icon={faPlus} />\r\n        </label>\r\n        <input\r\n          id=\"attach-file\"\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          onChange={onFileChange}\r\n          style={{\r\n            opacity: 0,\r\n          }}\r\n        />\r\n        {fileUrl && (\r\n          <div className=\"factoryForm__attachment\">\r\n            <img\r\n              src={fileUrl}\r\n              style={{\r\n                backgroundImage: fileUrl,\r\n              }}\r\n              alt=\"\"\r\n            />\r\n            <div className=\"factoryForm__clear\" onClick={onClearPhoto}>\r\n              <span>Remove</span>\r\n              <FontAwesomeIcon icon={faTimes} />\r\n            </div>\r\n          </div>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TweetFactory;\r\n","import Tweet from 'Components/Tweet';\r\nimport TweetFactory from 'Components/TweetFactory';\r\nimport { dbService, storageService } from 'fbase';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nfunction Home({ userObj }) {\r\n  const [tweets, setTweets] = useState([]);\r\n  useEffect(() => {\r\n    dbService.collection('tweets').onSnapshot(snapshot => {\r\n      const tweetArr = snapshot.docs.map(doc => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n      setTweets(tweetArr);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <TweetFactory userObj={userObj} />\r\n      <div style={{ marginTop: 30 }}>\r\n        {tweets.map(twet => (\r\n          <Tweet\r\n            key={twet.id}\r\n            tweetObj={twet}\r\n            isOwner={twet.creatorId === userObj.uid}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTwitter } from '@fortawesome/free-brands-svg-icons';\r\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\r\n\r\nfunction Navigation({ userObj }) {\r\n  return (\r\n    <nav>\r\n      <ul style={{ display: 'flex', justifyContent: 'center', marginTop: 50 }}>\r\n        <li>\r\n          <Link to=\"/\" style={{ marginRight: 10 }}>\r\n            <FontAwesomeIcon icon={faTwitter} color={'#04AAFF'} size=\"2x\" />\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link\r\n            to=\"/profile\"\r\n            style={{\r\n              marginLeft: 10,\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n              alignItems: 'center',\r\n              fontSize: 12,\r\n            }}\r\n          >\r\n            <FontAwesomeIcon icon={faUser} color={'#04AAFF'} size=\"2x\" />\r\n            <span style={{ marginTop: 10 }}>\r\n              {userObj.displayName\r\n                ? `${userObj.displayName}의 Profile`\r\n                : 'Profile'}\r\n            </span>\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Profile from 'routes/Profile';\r\nimport Auth from '../routes/Auth';\r\nimport Home from '../routes/Home';\r\nimport Navigation from './Navigation';\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj} />}\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <div\r\n            style={{\r\n              maxWidth: 890,\r\n              width: '100%',\r\n              margin: '0 auto',\r\n              marginTop: 80,\r\n              display: 'flex',\r\n              justifyContent: 'center',\r\n            }}\r\n          >\r\n            <Route exact path=\"/\">\r\n              <Home userObj={userObj} />\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n              <Profile userObj={userObj} refreshUser={refreshUser} />\r\n            </Route>\r\n            {/* <Redirect from=\"*\" to=\"/\" /> */}\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <Route exact path=\"/\" component={Auth} />\r\n            {/* <Redirect from=\"*\" to=\"/\" /> */}\r\n          </>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React, { useState, useEffect } from 'react';\nimport AppRouter from 'Components/Router';\nimport { authService } from 'fbase';\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    // when login, logout, catch chainging about user\n    authService.onAuthStateChanged(user => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: args => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: args => user.updateProfile(args),\n    });\n  };\n\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        'initialized'\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}